{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "traildf900"
		},
		"trigger1_properties_azuresql_to_adlsgen2_parameters_Sink_foldername": {
			"type": "string",
			"defaultValue": "azuresql_to_adlsgen2"
		},
		"trig_azuresql_properties_main_pl_parameters_SourceName": {
			"type": "string",
			"defaultValue": "azure_sql"
		},
		"trig_azuresql_properties_main_pl_parameters_DataGroup": {
			"type": "string",
			"defaultValue": "Crime"
		},
		"trig_azuresql_properties_main_pl_parameters_DataSetList": {
			"type": "string",
			"defaultValue": "2"
		},
		"trig_blob_properties_main_pl_parameters_SourceName": {
			"type": "string",
			"defaultValue": "blob_storage"
		},
		"trig_blob_properties_main_pl_parameters_DataGroup": {
			"type": "string",
			"defaultValue": "Country"
		},
		"trig_blob_properties_main_pl_parameters_DataSetList": {
			"type": "string",
			"defaultValue": "1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ingestion_controller')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "SP_insert_log_detial_controller_level",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.SourceName",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "blob_storage",
									"activities": [
										{
											"name": "Execute Pipeline1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "demo_blob_ingestor_child_pl",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"foldername": {
														"value": "@pipeline().parameters.foldername",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "set var_status",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Execute Pipeline1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "status",
												"value": {
													"value": "@activity('Execute Pipeline1').output.pipelineReturnValue.status",
													"type": "Expression"
												}
											}
										},
										{
											"name": "set_REcord_count",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Execute Pipeline1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "record_count",
												"value": {
													"value": "@string(activity('Execute Pipeline1').output.pipelineReturnValue.filesWritten)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "SP_log_schema_Pl_level_update",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "set var_status",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "set_REcord_count",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "dataset filenames",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "[[dbo].[SP_log_schema_PL_level_update]",
												"storedProcedureParameters": {
													"ADF_pipeline_run_id": {
														"value": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														},
														"type": "String"
													},
													"Databrick_exec_time": {
														"value": null,
														"type": "String"
													},
													"Databrick_url": {
														"value": null,
														"type": "String"
													},
													"Dataset_name": {
														"value": null,
														"type": "String"
													},
													"End_date": {
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														},
														"type": "DateTime"
													},
													"End_time": {
														"value": {
															"value": "@formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss')",
															"type": "Expression"
														},
														"type": "DateTime"
													},
													"Error_message": {
														"value": null,
														"type": "String"
													},
													"Fire_command": {
														"value": null,
														"type": "String"
													},
													"From_layer_id": {
														"value": "1",
														"type": "Int32"
													},
													"Ingestor_name": {
														"value": {
															"value": "@pipeline().Pipeline",
															"type": "Expression"
														},
														"type": "String"
													},
													"Landing_file_name": {
														"value": null,
														"type": "String"
													},
													"Record_count": {
														"value": {
															"value": "@string(activity('Execute Pipeline1').output.pipelineReturnValue.filesWritten)",
															"type": "Expression"
														},
														"type": "Int32"
													},
													"Source_name": {
														"value": {
															"value": "@pipeline().parameters.SourceName",
															"type": "Expression"
														},
														"type": "String"
													},
													"Start_date": {
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														},
														"type": "DateTime"
													},
													"Start_time": {
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														},
														"type": "DateTime"
													},
													"STATUS": {
														"value": {
															"value": "@activity('Execute Pipeline1').output.pipelineReturnValue.status",
															"type": "Expression"
														},
														"type": "String"
													},
													"To_layer_id": {
														"value": "2",
														"type": "Int32"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "SP_LinkedService",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "dataset filenames",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Execute Pipeline1",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "filename",
												"value": {
													"value": "@activity('Execute Pipeline1').output.pipelineReturnValue.getfilenames",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "azure_sql",
									"activities": [
										{
											"name": "Exec_azuresql",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "SQL_To_ADLS_Ingestor",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"IJ_Source_Name": {
														"value": "@pipeline().parameters.SourceName",
														"type": "Expression"
													},
													"IJ_Full_Query": {
														"value": "@pipeline().parameters.Query",
														"type": "Expression"
													},
													"IJ_Table_Name": {
														"value": "@pipeline().parameters.TableName",
														"type": "Expression"
													},
													"Targetfilename": {
														"value": "@variables('filename')",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "get_status",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Exec_azuresql",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "status",
												"value": {
													"value": "@activity('Exec_azuresql').output.pipelineReturnValue.status",
													"type": "Expression"
												}
											}
										},
										{
											"name": "get record_count",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Exec_azuresql",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "record_count",
												"value": {
													"value": "@string(activity('Exec_azuresql').output.pipelineReturnValue.filesWritten)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "SP_update_log_detial_controller_level",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "get_status",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "get record_count",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "get_error",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "[[dbo].[SP_log_schema_PL_level_update]",
												"storedProcedureParameters": {
													"ADF_pipeline_run_id": {
														"value": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														},
														"type": "String"
													},
													"Databrick_exec_time": {
														"value": null,
														"type": "String"
													},
													"Databrick_url": {
														"value": null,
														"type": "String"
													},
													"Dataset_name": {
														"value": {
															"value": "@pipeline().parameters.TableName",
															"type": "Expression"
														},
														"type": "String"
													},
													"End_date": {
														"value": null,
														"type": "DateTime"
													},
													"End_time": {
														"value": null,
														"type": "DateTime"
													},
													"Error_message": {
														"value": {
															"value": "@variables('errors')",
															"type": "Expression"
														},
														"type": "String"
													},
													"Fire_command": {
														"value": null,
														"type": "String"
													},
													"From_layer_id": {
														"value": "1",
														"type": "Int32"
													},
													"Ingestor_name": {
														"value": {
															"value": "@pipeline().Pipeline",
															"type": "Expression"
														},
														"type": "String"
													},
													"Landing_file_name": {
														"value": null,
														"type": "String"
													},
													"Record_count": {
														"value": {
															"value": "@activity('Exec_azuresql').output.pipelineReturnValue.filesWritten",
															"type": "Expression"
														},
														"type": "Int32"
													},
													"Source_name": {
														"value": {
															"value": "@pipeline().parameters.SourceName",
															"type": "Expression"
														},
														"type": "String"
													},
													"Start_date": {
														"value": null,
														"type": "DateTime"
													},
													"Start_time": {
														"value": null,
														"type": "DateTime"
													},
													"STATUS": {
														"value": {
															"value": "@variables('status')",
															"type": "Expression"
														},
														"type": "String"
													},
													"To_layer_id": {
														"value": "2",
														"type": "Int32"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "SP_LinkedService",
												"type": "LinkedServiceReference"
											}
										},
										{
											"name": "get_error",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Exec_azuresql",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"variableName": "errors",
												"value": {
													"value": "@string(activity('Exec_azuresql').output.pipelineReturnValue.errors)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SP_insert_log_detial_controller_level",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Starttime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "filename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_log_schema_PL_level_insert]",
							"storedProcedureParameters": {
								"ADF_pipeline_run_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Databrick_exec_time": {
									"value": null,
									"type": "String"
								},
								"Databrick_url": {
									"value": null,
									"type": "String"
								},
								"Dataset_name": {
									"value": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"End_date": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"End_time": {
									"value": null,
									"type": "DateTime"
								},
								"Error_message": {
									"value": null,
									"type": "String"
								},
								"Fire_command": {
									"value": null,
									"type": "String"
								},
								"From_layer_id": {
									"value": "1",
									"type": "Int32"
								},
								"Ingestor_name": {
									"value": null,
									"type": "String"
								},
								"Landing_file_name": {
									"value": {
										"value": "@concat(string(pipeline().parameters.TableName),' ',formatDateTime(utcnow(), 'yyyy-MM-dd'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"Record_count": {
									"value": null,
									"type": "Int32"
								},
								"Source_name": {
									"value": {
										"value": "@pipeline().parameters.SourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Start_date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Start_time": {
									"value": {
										"value": "@variables('Start_time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"STATUS": {
									"value": null,
									"type": "String"
								},
								"To_layer_id": {
									"value": "2",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SP_LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Starttime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Start_time",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "filename",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Query": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"SourceName": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"variables": {
					"Start_time": {
						"type": "String"
					},
					"End_time": {
						"type": "String"
					},
					"record_count": {
						"type": "String"
					},
					"get_foldername": {
						"type": "String"
					},
					"status": {
						"type": "String"
					},
					"endtime": {
						"type": "String"
					},
					"starttime": {
						"type": "String"
					},
					"errors": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MAIN_PIPELINE_FOLDLER"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-24T10:15:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/mail pl return value')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "child pl return value",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SP_LinkedService",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "insert into demo_return_value values\n('@{activity('Execute Pipeline1').output.pipelineReturnValue.errors}','@{activity('Execute Pipeline1').output.pipelineReturnValue.Status}','@{activity('Execute Pipeline1').output.pipelineReturnValue.end_time}')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "get_status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "STATUS",
							"value": {
								"value": "@activity('Execute Pipeline1').output.pipelineReturnValue.status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "endtime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "End_time",
							"value": {
								"value": "@activity('Execute Pipeline1').output.pipelineReturnValue.End_time",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"STATUS": {
						"type": "String"
					},
					"End_time": {
						"type": "String"
					}
				},
				"folder": {
					"name": "return value folder"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-22T02:15:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermrk_master_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Json1table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "watermrk",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"tablename": {
												"value": "@item().tablename",
												"type": "Expression"
											},
											"watermarkcoulmn": {
												"value": "@item().watermarkcoulmn",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "watermark folder"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T07:03:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "azuresql_to_adlsgen2",
							"type": "PipelineReference"
						},
						"parameters": {
							"Sink_foldername": "[parameters('trigger1_properties_azuresql_to_adlsgen2_parameters_Sink_foldername')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-08-09T16:58:00",
						"endTime": "2023-08-09T17:01:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP_Log_Master_Insert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Sp_get_datasets]",
								"storedProcedureParameters": {
									"Datagroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataGroup",
											"type": "Expression"
										}
									},
									"source_id": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.DataSetList",
											"type": "Expression"
										}
									},
									"source_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SourceName",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_azuresql_src_lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ingestion_controller",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Query": {
												"value": "@item().full_query",
												"type": "Expression"
											},
											"TableName": {
												"value": "@item().table_name",
												"type": "Expression"
											},
											"SourceName": {
												"value": "@item().Source_name",
												"type": "Expression"
											},
											"foldername": {
												"value": "@item().folder_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "SP_Log_Master_Insert",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Starttime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_log_schema_IN]",
							"storedProcedureParameters": {
								"ADF_pipeline_run_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Datagroup": {
									"value": {
										"value": "@pipeline().parameters.Datagroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"Datasetlist": {
									"value": null,
									"type": "String"
								},
								"End_time": {
									"value": "",
									"type": "String"
								},
								"Pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_name": {
									"value": {
										"value": "@pipeline().parameters.SourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Start_time": {
									"value": {
										"value": "@{formatDateTime(variables('Start_time'),'yyyy-MM-dd HH:mm:ss')}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "",
									"type": "String"
								},
								"Trigger_id": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Trigger_start_Date": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Ls_trial_sp_log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP_Log_Master_update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Endtime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_log_schema_Update]",
							"storedProcedureParameters": {
								"ADF_pipeline_run_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Datagroup": {
									"value": {
										"value": "@pipeline().parameters.Datagroup",
										"type": "Expression"
									},
									"type": "String"
								},
								"Datasetlist": {
									"value": {
										"value": "@pipeline().parameters.DataSetList",
										"type": "Expression"
									},
									"type": "String"
								},
								"End_time": {
									"value": {
										"value": "@{formatDateTime(variables('End_time'),'yyyy-MM-dd HH:mm:ss')}",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_name": {
									"value": {
										"value": "@pipeline().parameters.SourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Start_time": {
									"value": {
										"value": "@{formatDateTime(variables('Start_time'),'yyyy-MM-dd HH:mm:ss')}",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Status": {
									"value": "success",
									"type": "String"
								},
								"Trigger_id": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Trigger_start_Date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Ls_trial_sp_log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Starttime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Start_time",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Endtime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "End_time",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"DataGroup": {
						"type": "string"
					},
					"DataSetList": {
						"type": "string"
					}
				},
				"variables": {
					"Start_time": {
						"type": "String"
					},
					"End_time": {
						"type": "String"
					},
					"record_count": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MAIN_PIPELINE_FOLDLER"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T06:20:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ingestion_controller')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestor_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start_time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "start_time",
							"value": {
								"value": "@formatDateTime(utcNow(),'MM-dd-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log_Master_Insert",
						"description": "Insert into Log Master",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Start_time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_log_schema_IN]",
							"storedProcedureParameters": {
								"ADF_pipeline_run_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Datagroup": {
									"value": "",
									"type": "String"
								},
								"Datasetlist": {
									"value": "",
									"type": "String"
								},
								"End_time": {
									"value": null,
									"type": "DateTime"
								},
								"Pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_name": {
									"value": null,
									"type": "String"
								},
								"Start_time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": "'Started'",
									"type": "String"
								},
								"Trigger_id": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Trigger_start_Date": {
									"value": {
										"value": "@variables('start_time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Ls_trial_sp_log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Call_Get_Dataset_Config_LK",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Log_Master_Insert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Sp_get_datasets]",
								"storedProcedureParameters": {
									"Datagroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataGroup",
											"type": "Expression"
										}
									},
									"source_id": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.DataSetList",
											"type": "Expression"
										}
									},
									"source_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SourceName",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_azuresql_src_lookup",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach DataSet",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Call_Get_Dataset_Config_LK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Call_Get_Dataset_Config_LK').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "IngestionController",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Query": {
												"value": "@item().full_query",
												"type": "Expression"
											},
											"TableName": {
												"value": "@item().table_name",
												"type": "Expression"
											},
											"SourceName": {
												"value": "@item().source_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"DataGroup": {
						"type": "string"
					},
					"DataSetList": {
						"type": "string"
					}
				},
				"variables": {
					"start_time": {
						"type": "String"
					},
					"SourceName": {
						"type": "String"
					},
					"status": {
						"type": "String"
					},
					"errors": {
						"type": "String"
					},
					"starttime": {
						"type": "String"
					},
					"endtime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Version2"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-23T06:20:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ingestor_Master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceName": {
									"value": "@pipeline().parameters.SourceName",
									"type": "Expression"
								},
								"DataGroup": {
									"value": "@pipeline().parameters.DataGroup",
									"type": "Expression"
								},
								"DataSetList": {
									"value": "@pipeline().parameters.DataSetList",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"DataGroup": {
						"type": "string"
					},
					"DataSetList": {
						"type": "string"
					}
				},
				"variables": {
					"status": {
						"type": "String"
					},
					"errors": {
						"type": "String"
					},
					"endtime": {
						"type": "String"
					},
					"starttime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Version2"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-18T13:18:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Ingestor_Master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/main_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ingestion_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SourceName": {
									"value": "@pipeline().parameters.SourceName",
									"type": "Expression"
								},
								"DataGroup": {
									"value": "@pipeline().parameters.DataGroup",
									"type": "Expression"
								},
								"DataSetList": {
									"value": "@pipeline().parameters.DataSetList",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"DataGroup": {
						"type": "string"
					},
					"DataSetList": {
						"type": "string"
					}
				},
				"variables": {
					"get_foldername": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MAIN_PIPELINE_FOLDLER"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-18T03:11:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Ingestion_master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trig_azuresql')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "main_pl",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceName": "[parameters('trig_azuresql_properties_main_pl_parameters_SourceName')]",
							"DataGroup": "[parameters('trig_azuresql_properties_main_pl_parameters_DataGroup')]",
							"DataSetList": "[parameters('trig_azuresql_properties_main_pl_parameters_DataSetList')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-08-24T10:58:00",
						"endTime": "2023-08-24T11:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/main_pl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trig_blob')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "main_pl",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceName": "[parameters('trig_blob_properties_main_pl_parameters_SourceName')]",
							"DataGroup": "[parameters('trig_blob_properties_main_pl_parameters_DataGroup')]",
							"DataSetList": "[parameters('trig_blob_properties_main_pl_parameters_DataSetList')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-08-24T10:56:00",
						"endTime": "2023-08-24T10:58:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/main_pl')]"
			]
		}
	]
}
{
	"name": "mysql_ingestor",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Start_time",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "SELECT TABLE_NAME, TABLE_SCHEMA\nFROM INFORMATION_SCHEMA.TABLES\nwhere table_schema='mysqldb';",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DS_mysql_src",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureMySqlSource",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "AvroSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "AvroWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Ds_mysql_src_param",
									"type": "DatasetReference",
									"parameters": {
										"tablename_ds": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Ds_avro_ddst_param",
									"type": "DatasetReference",
									"parameters": {
										"foldername": {
											"value": "@pipeline().parameters.Sink_foldername",
											"type": "Expression"
										},
										"Filename": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Start_time",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Start_time",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Endtime",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "End_time",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Endtime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SP_log_table]",
					"storedProcedureParameters": {
						"Endtime": {
							"value": {
								"value": "@{formatDateTime(variables('End_time'),'yyyy-MM-dd HH:mm:ss')}",
								"type": "Expression"
							},
							"type": "String"
						},
						"PL_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"PL_runid": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PL_triggertime": {
							"value": {
								"value": "@{formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss')}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"PL_triggertype": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "String"
						},
						"Starttime": {
							"value": {
								"value": "@{formatDateTime(variables('Start_time'),'yyyy-MM-dd HH:mm:ss')}\n",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Ls_azuresql_sp_src",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Sink_foldername": {
				"type": "string"
			}
		},
		"variables": {
			"Start_time": {
				"type": "String"
			},
			"End_time": {
				"type": "String"
			}
		},
		"annotations": []
	}
}